{"ast":null,"code":"var _jsxFileName = \"/Users/sancaf/Desktop/carpeta sin ti\\u0301tulo/Challenge_React/src/components/ListOfMovies.jsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from 'react-query';\nimport { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport React from 'react';\nimport MovieModal from './MovieModal';\nimport { SearchContext } from '../context/SearchContextProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListOfMovies() {\n  _s();\n  const {\n    searchQuery,\n    searchType\n  } = useContext(SearchContext);\n  const API_KEY = 'ba282fc7777a85594b4d09bffedbb258';\n  const IMAGE_PATH = 'https://image.tmdb.org/t/p/w500';\n  const API_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchQuery}`;\n  const favorites = Object.values(JSON.parse(localStorage.getItem('favorites') || '{}'));\n  const fetchData = async () => {\n    const config = {\n      discover: `https://api.themoviedb.org/3/movie/latest?api_key=${API_KEY}`,\n      popularity: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&language=en-US&page=1`,\n      votes: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=vote_average.desc&language=en-US&page=1`,\n      date: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&page=1`,\n      textQuery: API_URL\n    };\n    const path = config[searchType];\n    if (!path) return;\n    const res = await fetch(path);\n    return res.json();\n  };\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery('movies', fetchData, {\n    refetchInterval: 1000\n  });\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const handleCardClick = movie => {\n    setSelectedMovie(movie);\n  };\n  const movies = searchType === 'favourites' ? favorites : (data === null || data === void 0 ? void 0 : data.results) || [];\n  return /*#__PURE__*/_jsxDEV(Deck, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error fetching data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n      onClick: () => handleCardClick(movie),\n      children: [/*#__PURE__*/_jsxDEV(Poster, {\n        src: IMAGE_PATH + movie.poster_path,\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)), selectedMovie && /*#__PURE__*/_jsxDEV(MovieModal, {\n      selectedMovie: selectedMovie,\n      onClose: () => setSelectedMovie(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(ListOfMovies, \"tK4JbOgO3fDEY8K/RtfhFHSSSqY=\", false, function () {\n  return [useQuery];\n});\n_c = ListOfMovies;\nconst Deck = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 1em;\n  padding: 1em;\n`;\n_c2 = Deck;\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  background-color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  width: 250px;\n  cursor: pointer;\n  &:hover {\n    scale: 1.05;\n    transition: 0.3s;\n  }\n`;\n_c3 = Card;\nconst Poster = styled.img`\n  object-fit: cover;\n`;\n_c4 = Poster;\nconst CardContent = styled.div`\n  padding: 0.5em;\n  height: 15%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c5 = CardContent;\nconst Title = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin: 0;\n  margin-bottom: 4px;\n`;\n_c6 = Title;\nexport default ListOfMovies;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ListOfMovies\");\n$RefreshReg$(_c2, \"Deck\");\n$RefreshReg$(_c3, \"Card\");\n$RefreshReg$(_c4, \"Poster\");\n$RefreshReg$(_c5, \"CardContent\");\n$RefreshReg$(_c6, \"Title\");","map":{"version":3,"names":["useQuery","useState","useContext","styled","React","MovieModal","SearchContext","jsxDEV","_jsxDEV","ListOfMovies","_s","searchQuery","searchType","API_KEY","IMAGE_PATH","API_URL","favorites","Object","values","JSON","parse","localStorage","getItem","fetchData","config","discover","popularity","votes","date","textQuery","path","res","fetch","json","isLoading","error","data","refetchInterval","selectedMovie","setSelectedMovie","handleCardClick","movie","movies","results","Deck","children","fileName","_jsxFileName","lineNumber","columnNumber","map","Card","onClick","Poster","src","poster_path","alt","title","CardContent","Title","id","onClose","_c","div","_c2","_c3","img","_c4","_c5","h2","_c6","$RefreshReg$"],"sources":["/Users/sancaf/Desktop/carpeta sin título/Challenge_React/src/components/ListOfMovies.jsx"],"sourcesContent":["import { useQuery } from 'react-query'\nimport { useState, useContext } from 'react'\nimport styled from 'styled-components'\nimport React from 'react'\nimport MovieModal from './MovieModal'\nimport { SearchContext } from '../context/SearchContextProvider'\n\nfunction ListOfMovies() {\n  const { searchQuery, searchType } = useContext(SearchContext)\n\n  const API_KEY = 'ba282fc7777a85594b4d09bffedbb258'\n\n  const IMAGE_PATH = 'https://image.tmdb.org/t/p/w500'\n  const API_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n\n  const favorites = Object.values(\n    JSON.parse(localStorage.getItem('favorites') || '{}')\n  )\n\n  const fetchData = async () => {\n    const config = {\n      discover: `https://api.themoviedb.org/3/movie/latest?api_key=${API_KEY}`,\n      popularity: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&language=en-US&page=1`,\n\n      votes: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=vote_average.desc&language=en-US&page=1`,\n      date: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&page=1`,\n      textQuery: API_URL,\n    }\n\n    const path = config[searchType]\n    if (!path) return\n    const res = await fetch(path)\n    return res.json()\n  }\n\n  const { isLoading, error, data } = useQuery('movies', fetchData, {\n    refetchInterval: 1000,\n  })\n\n  const [selectedMovie, setSelectedMovie] = useState(null)\n\n  const handleCardClick = (movie) => {\n    setSelectedMovie(movie)\n  }\n\n  const movies = searchType === 'favourites' ? favorites : data?.results || []\n\n  return (\n    <Deck>\n      {isLoading && <div>Loading...</div>}\n      {error && <div>Error fetching data</div>}\n      {movies.map((movie) => (\n        <Card key={movie.id} onClick={() => handleCardClick(movie)}>\n          <Poster src={IMAGE_PATH + movie.poster_path} alt={movie.title} />\n          <CardContent>\n            <Title>{movie.title}</Title>\n          </CardContent>\n        </Card>\n      ))}\n      {selectedMovie && (\n        <MovieModal\n          selectedMovie={selectedMovie}\n          onClose={() => setSelectedMovie(null)}\n        />\n      )}\n    </Deck>\n  )\n}\n\nconst Deck = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 1em;\n  padding: 1em;\n`\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  background-color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  width: 250px;\n  cursor: pointer;\n  &:hover {\n    scale: 1.05;\n    transition: 0.3s;\n  }\n`\n\nconst Poster = styled.img`\n  object-fit: cover;\n`\n\nconst CardContent = styled.div`\n  padding: 0.5em;\n  height: 15%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Title = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin: 0;\n  margin-bottom: 4px;\n`\n\nexport default ListOfMovies\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}