{"ast":null,"code":"var _jsxFileName = \"/Users/sancaf/Desktop/carpeta sin ti\\u0301tulo/Challenge_React/src/components/ListOfMovies.jsx\",\n  _s = $RefreshSig$();\nimport { useInfiniteQuery } from 'react-query';\nimport { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport React from 'react';\nimport MovieModal from './MovieModal';\nimport { SearchContext } from '../context/SearchContextProvider';\nimport { useInView } from 'react-intersection-observer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListOfMovies() {\n  _s();\n  const {\n    searchQuery,\n    searchType,\n    startDate,\n    endDate\n  } = useContext(SearchContext);\n  const API_URL = `https://api.themoviedb.org/3/`;\n  const API_KEY = 'ba282fc7777a85594b4d09bffedbb258';\n  const IMAGE_PATH = 'https://image.tmdb.org/t/p/w500';\n  const favorites = Object.values(JSON.parse(localStorage.getItem('favorites') || '{}'));\n  const fetchMovies = async _ref => {\n    let {\n      pageParam = 1\n    } = _ref;\n    const config = {\n      discover: `${API_URL}discover/movie?api_key=${API_KEY}&language=en-US&sort_by=release_date.desc&page=${pageParam}`,\n      popularity: `${API_URL}discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&language=en-US&page=${pageParam}`,\n      votes: `${API_URL}discover/movie?api_key=${API_KEY}&sort_by=vote_average.desc&language=en-US&page=${pageParam}`,\n      date: `${API_URL}discover/movie?api_key=${API_KEY}&language=en-US&sort_by=release_date.desc&page=${pageParam}&release_date.gte=${startDate}&release_date.lte=${endDate}`,\n      textQuery: `${API_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}&page=${pageParam}`\n    };\n    const path = config[searchType];\n    if (!path) return;\n    const res = await fetch(path);\n    const data = await res.json();\n    return {\n      nextPage: data.page + 1,\n      totalPages: data.total_pages,\n      results: data.results\n    };\n  };\n  const {\n    data,\n    isLoading,\n    error,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage\n  } = useInfiniteQuery(['movies', searchType, startDate, endDate, searchQuery], fetchMovies, {\n    getNextPageParam: lastPage => lastPage.nextPage <= lastPage.totalPages ? lastPage.nextPage : undefined\n  });\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [ref, inView] = useInView();\n  const handleCardClick = movie => {\n    setSelectedMovie(movie);\n  };\n  const movies = searchType === 'favourites' ? favorites : (data === null || data === void 0 ? void 0 : data.pages.flatMap(page => page.results)) || [];\n  const loadMore = () => {\n    if (!isFetchingNextPage) {\n      fetchNextPage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Deck, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error fetching data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n      onClick: () => handleCardClick(movie),\n      children: [/*#__PURE__*/_jsxDEV(Poster, {\n        src: IMAGE_PATH + movie.poster_path,\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), selectedMovie && /*#__PURE__*/_jsxDEV(MovieModal, {\n      selectedMovie: selectedMovie,\n      onClose: () => setSelectedMovie(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(ListOfMovies, \"n2ApOlF4WwZXPYDCKaF5TeWJF2A=\", false, function () {\n  return [useInfiniteQuery, useInView];\n});\n_c = ListOfMovies;\nconst Deck = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 1em;\n  padding: 1em;\n`;\n_c2 = Deck;\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  background-color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  width: 250px;\n  cursor: pointer;\n  &:hover {\n    scale: 1.05;\n    transition: 0.3s;\n  }\n`;\n_c3 = Card;\nconst Poster = styled.img`\n  object-fit: cover;\n`;\n_c4 = Poster;\nconst CardContent = styled.div`\n  padding: 0.5em;\n  height: 15%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c5 = CardContent;\nconst Title = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin: 0;\n  margin-bottom: 4px;\n`;\n_c6 = Title;\nexport default ListOfMovies;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ListOfMovies\");\n$RefreshReg$(_c2, \"Deck\");\n$RefreshReg$(_c3, \"Card\");\n$RefreshReg$(_c4, \"Poster\");\n$RefreshReg$(_c5, \"CardContent\");\n$RefreshReg$(_c6, \"Title\");","map":{"version":3,"names":["useInfiniteQuery","useState","useContext","styled","React","MovieModal","SearchContext","useInView","jsxDEV","_jsxDEV","ListOfMovies","_s","searchQuery","searchType","startDate","endDate","API_URL","API_KEY","IMAGE_PATH","favorites","Object","values","JSON","parse","localStorage","getItem","fetchMovies","_ref","pageParam","config","discover","popularity","votes","date","textQuery","path","res","fetch","data","json","nextPage","page","totalPages","total_pages","results","isLoading","error","fetchNextPage","hasNextPage","isFetchingNextPage","getNextPageParam","lastPage","undefined","selectedMovie","setSelectedMovie","ref","inView","handleCardClick","movie","movies","pages","flatMap","loadMore","Deck","children","fileName","_jsxFileName","lineNumber","columnNumber","map","Card","onClick","Poster","src","poster_path","alt","title","CardContent","Title","id","onClose","_c","div","_c2","_c3","img","_c4","_c5","h2","_c6","$RefreshReg$"],"sources":["/Users/sancaf/Desktop/carpeta sin título/Challenge_React/src/components/ListOfMovies.jsx"],"sourcesContent":["import { useInfiniteQuery } from 'react-query'\nimport { useState, useContext } from 'react'\nimport styled from 'styled-components'\nimport React from 'react'\nimport MovieModal from './MovieModal'\nimport { SearchContext } from '../context/SearchContextProvider'\nimport { useInView } from 'react-intersection-observer'\n\nfunction ListOfMovies() {\n  const { searchQuery, searchType, startDate, endDate } =\n    useContext(SearchContext)\n\n  const API_URL = `https://api.themoviedb.org/3/`\n  const API_KEY = 'ba282fc7777a85594b4d09bffedbb258'\n  const IMAGE_PATH = 'https://image.tmdb.org/t/p/w500'\n\n  const favorites = Object.values(\n    JSON.parse(localStorage.getItem('favorites') || '{}')\n  )\n\n  const fetchMovies = async ({ pageParam = 1 }) => {\n    const config = {\n      discover: `${API_URL}discover/movie?api_key=${API_KEY}&language=en-US&sort_by=release_date.desc&page=${pageParam}`,\n      popularity: `${API_URL}discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&language=en-US&page=${pageParam}`,\n      votes: `${API_URL}discover/movie?api_key=${API_KEY}&sort_by=vote_average.desc&language=en-US&page=${pageParam}`,\n      date: `${API_URL}discover/movie?api_key=${API_KEY}&language=en-US&sort_by=release_date.desc&page=${pageParam}&release_date.gte=${startDate}&release_date.lte=${endDate}`,\n      textQuery: `${API_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}&page=${pageParam}`,\n    }\n    const path = config[searchType]\n    if (!path) return\n\n    const res = await fetch(path)\n    const data = await res.json()\n    return {\n      nextPage: data.page + 1,\n      totalPages: data.total_pages,\n      results: data.results,\n    }\n  }\n\n  const {\n    data,\n    isLoading,\n    error,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery(\n    ['movies', searchType, startDate, endDate, searchQuery],\n    fetchMovies,\n    {\n      getNextPageParam: (lastPage) =>\n        lastPage.nextPage <= lastPage.totalPages\n          ? lastPage.nextPage\n          : undefined,\n    }\n  )\n\n  const [selectedMovie, setSelectedMovie] = useState(null)\n  const [ref, inView] = useInView()\n\n  const handleCardClick = (movie) => {\n    setSelectedMovie(movie)\n  }\n\n  const movies =\n    searchType === 'favourites'\n      ? favorites\n      : data?.pages.flatMap((page) => page.results) || []\n\n  const loadMore = () => {\n    if (!isFetchingNextPage) {\n      fetchNextPage()\n    }\n  }\n\n  return (\n    <Deck>\n      {isLoading && <div>Loading...</div>}\n      {error && <div>Error fetching data</div>}\n      {movies.map((movie) => (\n        <Card key={movie.id} onClick={() => handleCardClick(movie)}>\n          <Poster src={IMAGE_PATH + movie.poster_path} alt={movie.title} />\n          <CardContent>\n            <Title>{movie.title}</Title>\n          </CardContent>\n        </Card>\n      ))}\n      <div ref={ref} />\n      {selectedMovie && (\n        <MovieModal\n          selectedMovie={selectedMovie}\n          onClose={() => setSelectedMovie(null)}\n        />\n      )}\n    </Deck>\n  )\n}\n\nconst Deck = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 1em;\n  padding: 1em;\n`\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  background-color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  width: 250px;\n  cursor: pointer;\n  &:hover {\n    scale: 1.05;\n    transition: 0.3s;\n  }\n`\n\nconst Poster = styled.img`\n  object-fit: cover;\n`\n\nconst CardContent = styled.div`\n  padding: 0.5em;\n  height: 15%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Title = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin: 0;\n  margin-bottom: 4px;\n`\n\nexport default ListOfMovies\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}