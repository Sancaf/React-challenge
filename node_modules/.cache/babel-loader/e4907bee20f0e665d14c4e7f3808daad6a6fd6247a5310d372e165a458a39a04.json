{"ast":null,"code":"var _jsxFileName = \"/Users/sancaf/Desktop/carpeta sin ti\\u0301tulo/Challenge_React/src/context/SearchContextProvider.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchContext = /*#__PURE__*/createContext();\n// get current date in format yyyy-mm-dd\nconst today = new Date().toISOString().slice(0, 10);\nconsole.log(today);\nconst SearchContextProvider = props => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [searchType, setSearchType] = useState('discover');\n  return /*#__PURE__*/_jsxDEV(SearchContext.Provider, {\n    value: {\n      searchQuery,\n      setSearchQuery,\n      searchType,\n      setSearchType,\n      startDate,\n      setStartDate,\n      endDate,\n      setEndDate\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchContextProvider, \"Wko8u3A984kpj7zyPsTVChh0BVw=\");\n_c = SearchContextProvider;\nexport default SearchContextProvider;\nvar _c;\n$RefreshReg$(_c, \"SearchContextProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","SearchContext","today","Date","toISOString","slice","console","log","SearchContextProvider","props","_s","searchQuery","setSearchQuery","startDate","setStartDate","endDate","setEndDate","searchType","setSearchType","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sancaf/Desktop/carpeta sin título/Challenge_React/src/context/SearchContextProvider.js"],"sourcesContent":["import { createContext, useState } from 'react'\n\nexport const SearchContext = createContext()\n// get current date in format yyyy-mm-dd\nconst today = new Date().toISOString().slice(0, 10)\nconsole.log(today)\nconst SearchContextProvider = (props) => {\n  const [searchQuery, setSearchQuery] = useState('')\n  const [startDate, setStartDate] = useState(null)\n  const [endDate, setEndDate] = useState(null)\n  const [searchType, setSearchType] = useState('discover')\n\n  return (\n    <SearchContext.Provider\n      value={{\n        searchQuery,\n        setSearchQuery,\n        searchType,\n        setSearchType,\n        startDate,\n        setStartDate,\n        endDate,\n        setEndDate,\n      }}\n    >\n      {props.children}\n    </SearchContext.Provider>\n  )\n}\n\nexport default SearchContextProvider\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,aAAa,gBAAGJ,aAAa,CAAC,CAAC;AAC5C;AACA,MAAMK,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AACnDC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;AAClB,MAAMM,qBAAqB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,UAAU,CAAC;EAExD,oBACEE,OAAA,CAACC,aAAa,CAACkB,QAAQ;IACrBC,KAAK,EAAE;MACLT,WAAW;MACXC,cAAc;MACdK,UAAU;MACVC,aAAa;MACbL,SAAS;MACTC,YAAY;MACZC,OAAO;MACPC;IACF,CAAE;IAAAK,QAAA,EAEDZ,KAAK,CAACY;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE7B,CAAC;AAAAf,EAAA,CAtBKF,qBAAqB;AAAAkB,EAAA,GAArBlB,qBAAqB;AAwB3B,eAAeA,qBAAqB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}