{"ast":null,"code":"var _jsxFileName = \"/Users/sancaf/Desktop/carpeta sin ti\\u0301tulo/Challenge_React/src/components/ListOfMovies.jsx\",\n  _s = $RefreshSig$();\nimport { useInfiniteQuery } from 'react-query';\nimport { useState, useContext, useRef, useCallback } from 'react';\nimport styled from 'styled-components';\nimport React from 'react';\nimport MovieModal from './MovieModal';\nimport { SearchContext } from '../context/SearchContextProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListOfMovies() {\n  _s();\n  const {\n    searchQuery,\n    searchType\n  } = useContext(SearchContext);\n  const API_KEY = 'ba282fc7777a85594b4d09bffedbb258';\n  const IMAGE_PATH = 'https://image.tmdb.org/t/p/w500';\n  const API_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchQuery}`;\n  const favorites = Object.values(JSON.parse(localStorage.getItem('favorites') || '{}'));\n  const fetchMoreMovies = async _ref => {\n    let {\n      pageParam = 1\n    } = _ref;\n    const config = {\n      discover: `https://api.themoviedb.org/3/movie/latest?api_key=${API_KEY}`,\n      popularity: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&language=en-US&page=${pageParam}`,\n      votes: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=vote_average.desc&language=en-US&page=${pageParam}`,\n      date: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&page=${pageParam}`,\n      textQuery: `${API_URL}&page=${pageParam}`\n    };\n    const path = config[searchType];\n    if (!path) return;\n    const res = await fetch(path);\n    const data = await res.json();\n    return {\n      results: data.results,\n      nextPage: data.page + 1\n    };\n  };\n  const {\n    isLoading,\n    error,\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage\n  } = useInfiniteQuery('movies', fetchMoreMovies, {\n    getNextPageParam: lastPage => lastPage.nextPage\n  });\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const handleCardClick = movie => {\n    setSelectedMovie(movie);\n  };\n  const observer = useRef();\n  const lastMovieRef = useCallback(node => {\n    if (isLoading || isFetchingNextPage) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasNextPage) {\n        fetchNextPage();\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [isLoading, isFetchingNextPage, hasNextPage]);\n  const movies = searchType === 'favourites' ? favorites : data ? data.pages.flatMap(page => page.results) : [];\n  return /*#__PURE__*/_jsxDEV(Deck, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error fetching data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), movies.map((movie, index) => {\n      if (!movie || !movie.poster_path) return null;\n      return /*#__PURE__*/_jsxDEV(Card, {\n        onClick: () => handleCardClick(movie),\n        ref: index === movies.length - 1 ? lastMovieRef : null,\n        children: [/*#__PURE__*/_jsxDEV(Poster, {\n          src: IMAGE_PATH + movie.poster_path,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Title, {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this);\n    }), isFetchingNextPage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading more...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 30\n    }, this), selectedMovie && /*#__PURE__*/_jsxDEV(MovieModal, {\n      selectedMovie: selectedMovie,\n      onClose: () => setSelectedMovie(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(ListOfMovies, \"0kwtuCw9AirnkCD4937R1W5TAok=\", false, function () {\n  return [useInfiniteQuery];\n});\n_c = ListOfMovies;\nconst Deck = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 1em;\n  padding: 1em;\n`;\n_c2 = Deck;\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  background-color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  width: 250px;\n  cursor: pointer;\n  &:hover {\n    scale: 1.05;\n    transition: 0.3s;\n  }\n`;\n_c3 = Card;\nconst Poster = styled.img`\n  object-fit: cover;\n`;\n_c4 = Poster;\nconst CardContent = styled.div`\n  padding: 0.5em;\n  height: 15%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c5 = CardContent;\nconst Title = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin: 0;\n  margin-bottom: 4px;\n`;\n_c6 = Title;\nexport default ListOfMovies;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ListOfMovies\");\n$RefreshReg$(_c2, \"Deck\");\n$RefreshReg$(_c3, \"Card\");\n$RefreshReg$(_c4, \"Poster\");\n$RefreshReg$(_c5, \"CardContent\");\n$RefreshReg$(_c6, \"Title\");","map":{"version":3,"names":["useInfiniteQuery","useState","useContext","useRef","useCallback","styled","React","MovieModal","SearchContext","jsxDEV","_jsxDEV","ListOfMovies","_s","searchQuery","searchType","API_KEY","IMAGE_PATH","API_URL","favorites","Object","values","JSON","parse","localStorage","getItem","fetchMoreMovies","_ref","pageParam","config","discover","popularity","votes","date","textQuery","path","res","fetch","data","json","results","nextPage","page","isLoading","error","fetchNextPage","hasNextPage","isFetchingNextPage","getNextPageParam","lastPage","selectedMovie","setSelectedMovie","handleCardClick","movie","observer","lastMovieRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","movies","pages","flatMap","Deck","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","poster_path","Card","onClick","ref","length","Poster","src","alt","title","CardContent","Title","id","onClose","_c","div","_c2","_c3","img","_c4","_c5","h2","_c6","$RefreshReg$"],"sources":["/Users/sancaf/Desktop/carpeta sin título/Challenge_React/src/components/ListOfMovies.jsx"],"sourcesContent":["import { useInfiniteQuery } from 'react-query'\nimport { useState, useContext, useRef, useCallback } from 'react'\nimport styled from 'styled-components'\nimport React from 'react'\nimport MovieModal from './MovieModal'\nimport { SearchContext } from '../context/SearchContextProvider'\n\nfunction ListOfMovies() {\n  const { searchQuery, searchType } = useContext(SearchContext)\n\n  const API_KEY = 'ba282fc7777a85594b4d09bffedbb258'\n\n  const IMAGE_PATH = 'https://image.tmdb.org/t/p/w500'\n  const API_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n\n  const favorites = Object.values(\n    JSON.parse(localStorage.getItem('favorites') || '{}')\n  )\n\n  const fetchMoreMovies = async ({ pageParam = 1 }) => {\n    const config = {\n      discover: `https://api.themoviedb.org/3/movie/latest?api_key=${API_KEY}`,\n      popularity: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&language=en-US&page=${pageParam}`,\n      votes: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=vote_average.desc&language=en-US&page=${pageParam}`,\n      date: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&page=${pageParam}`,\n      textQuery: `${API_URL}&page=${pageParam}`,\n    }\n\n    const path = config[searchType]\n    if (!path) return\n    const res = await fetch(path)\n    const data = await res.json()\n    return { results: data.results, nextPage: data.page + 1 }\n  }\n\n  const {\n    isLoading,\n    error,\n    data,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery('movies', fetchMoreMovies, {\n    getNextPageParam: (lastPage) => lastPage.nextPage,\n  })\n\n  const [selectedMovie, setSelectedMovie] = useState(null)\n\n  const handleCardClick = (movie) => {\n    setSelectedMovie(movie)\n  }\n\n  const observer = useRef()\n  const lastMovieRef = useCallback(\n    (node) => {\n      if (isLoading || isFetchingNextPage) return\n      if (observer.current) observer.current.disconnect()\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && hasNextPage) {\n          fetchNextPage()\n        }\n      })\n      if (node) observer.current.observe(node)\n    },\n    [isLoading, isFetchingNextPage, hasNextPage]\n  )\n\n  const movies =\n    searchType === 'favourites'\n      ? favorites\n      : data\n      ? data.pages.flatMap((page) => page.results)\n      : []\n\n  return (\n    <Deck>\n      {isLoading && <div>Loading...</div>}\n      {error && <div>Error fetching data</div>}\n      {movies.map((movie, index) => {\n        if (!movie || !movie.poster_path) return null\n\n        return (\n          <Card\n            key={movie.id}\n            onClick={() => handleCardClick(movie)}\n            ref={index === movies.length - 1 ? lastMovieRef : null}\n          >\n            <Poster src={IMAGE_PATH + movie.poster_path} alt={movie.title} />\n            <CardContent>\n              <Title>{movie.title}</Title>\n            </CardContent>\n          </Card>\n        )\n      })}\n      {isFetchingNextPage && <div>Loading more...</div>}\n      {selectedMovie && (\n        <MovieModal\n          selectedMovie={selectedMovie}\n          onClose={() => setSelectedMovie(null)}\n        />\n      )}\n    </Deck>\n  )\n}\n\nconst Deck = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 1em;\n  padding: 1em;\n`\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  background-color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  width: 250px;\n  cursor: pointer;\n  &:hover {\n    scale: 1.05;\n    transition: 0.3s;\n  }\n`\n\nconst Poster = styled.img`\n  object-fit: cover;\n`\n\nconst CardContent = styled.div`\n  padding: 0.5em;\n  height: 15%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Title = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  margin: 0;\n  margin-bottom: 4px;\n`\n\nexport default ListOfMovies\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}